name: Build WebAssembly Packages
on:
  push:
    branches:
      - dev

env:
  QT_VERSION: 6.3.0
  APP_DIR: qtdesignviewer
  APP_NAME: qtdesignviewer

jobs:
  build:
    name: Ubuntu Latest
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        ref: dev
        path: ${{ env.APP_DIR }}

    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v1.12
      with:
        cmake-version: '3.21.x'

    - name: Download Qt
      id: qt
      shell: cmake -P {0}
      run: |
        set(qt_version "$ENV{QT_VERSION}")
        string(REPLACE "." "" qt_version_dotless "${qt_version}")
        set(qt_package_arch_suffix "wasm_32")

        set(qt_host_base_url "https://download.qt.io/online/qtsdkrepository/linux_x64/desktop/qt6_630")
        set(qt_host_package_suffix "-Linux-RHEL_8_4-GCC-Linux-RHEL_8_4-X86_64.7z")
        set(qt_host_package_dir_url "${qt_host_base_url}/qt.qt6.${qt_version_dotless}.gcc_64")

        # Prepare directories

        set(working_dir $ENV{GITHUB_WORKSPACE})
        file(MAKE_DIRECTORY ${working_dir})


        function(downloadAndExtract url download_dir archive)
          message("Downloading ${url} to ${download_dir}/${archive}")
          file(DOWNLOAD "${url}" ${download_dir}/${archive} )
          execute_process(COMMAND ${CMAKE_COMMAND} -E tar xf ${download_dir}/${archive} WORKING_DIRECTORY ${working_dir})
        endfunction()


        message("Downloading host packages from : ${qt_host_package_dir_url}")
        message("Downloading ${qt_host_base_url}/Updates.xml")

        file(DOWNLOAD "${qt_host_base_url}/Updates.xml" ./Updates.xml SHOW_PROGRESS)
        file(READ ./Updates.xml updates_xml)
        string(REGEX MATCH "<Name>qt.qt6.*<Version>([0-9+-.]+)</Version>" updates_xml_output "${updates_xml}")
        set(qt_host_package_version ${CMAKE_MATCH_1})

        set(download_dir $ENV{GITHUB_WORKSPACE}/qt6-download-${qt_host_package_version})
        file(MAKE_DIRECTORY ${download_dir})
        file(RENAME ./Updates.xml ${download_dir}/Updates.xml)

        foreach(package qtbase qtdeclarative)
          downloadAndExtract(
            "${qt_host_package_dir_url}/${qt_host_package_version}${package}${qt_host_package_suffix}"
            ${download_dir}
            ${package}.7z
          )
        endforeach()

        # and rcc depends on libicu56.so
        downloadAndExtract(
            "${qt_host_package_dir_url}/${qt_host_package_version}icu-linux-Rhel7.2-x64.7z"
            ${download_dir}
            icu.7z
        )

        message("Downloading WebAssembly packages from : ${qt_package_dir_url}")
        message("Downloading ${qt_base_url}/Updates.xml")

        set(qt_base_url "https://download.qt.io/online/qtsdkrepository/linux_x64/desktop/qt6_630_wasm")
        set(qt_package_suffix "-Linux-openSUSE_15_3-GCC-Linux-WebAssembly-X86_64.7z")
        set(qt_package_dir_url "${qt_base_url}/qt.qt6.${qt_version_dotless}.${qt_package_arch_suffix}")


        file(DOWNLOAD "${qt_base_url}/Updates.xml" ./Updates.xml SHOW_PROGRESS)
        file(READ ./Updates.xml updates_xml)
        string(REGEX MATCH "<Name>qt.qt6.*<Version>([0-9+-.]+)</Version>" updates_xml_output "${updates_xml}")
        set(qt_package_version ${CMAKE_MATCH_1})

        set(download_dir $ENV{GITHUB_WORKSPACE}/qt6-download-${qt_package_version})
        file(MAKE_DIRECTORY ${download_dir})
        file(RENAME ./Updates.xml ${download_dir}/Updates.xml)

        # core packages
        foreach(package qttranslations qttools qtsvg qtdeclarative qtbase)
          downloadAndExtract(
            "${qt_package_dir_url}/${qt_package_version}${package}${qt_package_suffix}"
            ${download_dir}
            ${package}.7z
          )
        endforeach()

        # additional packages
        # to be added: qtshadertools qtquick3d
        foreach(package qtquicktimeline qt5compat)
          downloadAndExtract(
            "${qt_base_url}/qt.qt6.${qt_version_dotless}.${package}.${qt_package_arch_suffix}/${qt_package_version}${package}${qt_package_suffix}"
            ${download_dir}
            ${package}.7z
          )
        endforeach()

        # addons packages
        foreach(package qtwebsockets qtwebchannel qtvirtualkeyboard qtlottie qtimageformats)
          downloadAndExtract(
            "${qt_base_url}/qt.qt6.${qt_version_dotless}.addons.${package}.${qt_package_arch_suffix}/${qt_package_version}${package}${qt_package_suffix}"
            ${download_dir}
            ${package}.7z
          )
        endforeach()

        set(qt_dir ${working_dir}/${qt_version}/wasm_32)

        file(READ "${qt_dir}/mkspecs/qconfig.pri" qtconfig)
        string(REPLACE "Enterprise" "OpenSource" qtconfig "${qtconfig}")
        string(REPLACE "licheck.exe" "" qtconfig "${qtconfig}")
        string(REPLACE "licheck64" "" qtconfig "${qtconfig}")
        string(REPLACE "licheck_mac" "" qtconfig "${qtconfig}")
        file(WRITE "${qt_dir}/mkspecs/qconfig.pri" "${qtconfig}")

        # Save the path for other steps
        message("::set-output name=qt_dir::${qt_dir}")

    - name: Checkout emsdk
      uses: actions/checkout@v2
      with:
        repository: emscripten-core/emsdk
        ref: main
        path: emsdk

    - name: Install emsdk
      run: |
        echo "Current path"
        pwd
        echo "Contents:"
        ls -al

        cd emsdk
        ./emsdk install 3.0.0
        ./emsdk activate 3.0.0
        source "emsdk_env.sh"
        env

    - name: Checkout qtquickdesigner-components
      uses: actions/checkout@v2
      with:
        repository: qt-labs/qtquickdesigner-components
        ref: dev
        path: qtquickdesigner-components

    - name: Configure, build and install qtquickdesigner-components
      run: |
        source "emsdk/emsdk_env.sh"
        cd qtquickdesigner-components
        cmake -DCMAKE_BUILD_TYPE:STRING=Release -DQT_QMAKE_EXECUTABLE:STRING=${GITHUB_WORKSPACE}/6.3.0/wasm_32/bin/qmake -DCMAKE_PREFIX_PATH:STRING=${GITHUB_WORKSPACE}/6.3.0/wasm_32 -DCMAKE_C_COMPILER:STRING=${GITHUB_WORKSPACE}/emsdk/upstream/emscripten/emcc -DCMAKE_CXX_COMPILER:STRING=${GITHUB_WORKSPACE}/emsdk/upstream/emscripten/em++ -DCMAKE_TOOLCHAIN_FILE:FILEPATH=${GITHUB_WORKSPACE}/6.3.0/wasm_32/lib/cmake/Qt6/qt.toolchain.cmake -DQT_HOST_PATH:STRING=${GITHUB_WORKSPACE}/6.3.0/gcc_64 .

        cmake --build .
        cmake --install .

    - name: Configure and build qtdesignviewer
      run: |
        source "emsdk/emsdk_env.sh"
        cd qtdesignviewer
        cmake -DCMAKE_BUILD_TYPE:STRING=Release -DQT_QMAKE_EXECUTABLE:STRING=${GITHUB_WORKSPACE}/6.3.0/wasm_32/bin/qmake -DCMAKE_PREFIX_PATH:STRING=${GITHUB_WORKSPACE}/6.3.0/wasm_32 -DCMAKE_C_COMPILER:STRING=${GITHUB_WORKSPACE}/emsdk/upstream/emscripten/emcc -DCMAKE_CXX_COMPILER:STRING=${GITHUB_WORKSPACE}/emsdk/upstream/emscripten/em++ -DCMAKE_TOOLCHAIN_FILE:FILEPATH=${GITHUB_WORKSPACE}/6.3.0/wasm_32/lib/cmake/Qt6/qt.toolchain.cmake -DQT_HOST_PATH:STRING=${GITHUB_WORKSPACE}/6.3.0/gcc_64 .

        cmake --build .

    - name: Create artifact package
      run: |
        cd qtdesignviewer

        # APPLY BUILD NUMBER
        sed -i 's/#buildnumber#/${{github.run_number}}/' version.json

        # BUILD PACKAGE
        mkdir build
        mv *.wasm build
        mv *.js build
        mv *.json build
        mv *.otf build
        mv *.png build
        mv *.svg build
        mv index.html build

    - uses: actions/upload-artifact@v2
      with:
        name: qtdesignviewer_wasm
        path: qtdesignviewer/build/*

